//erase a container
docker rm -fv <container-name>

//list containers 

docker ps

//list all containers

docker ps -a

//create a container

tags like --name or -p are not mandatory, we are free to use them or not
if we do not want to use an specific image version, we just have to type the image name without ':' and it will create the container with the latest version of the image.

-p is use to bind a port or map the port, -d to run the container in the background

 docker run -d --name <container-name> -p <my-port-to-map:container-port-to-map> <image-name>:<image-version>


//create an image

-t tag is to set a name for the image, if we type a string next to ':' we will name the version of the image.

docker build -t <image-name>:<image-version> .

//create an image with other Dockerfile

-t tag is to set a name for the image, if we type a string next to ':' we will name the version of the image. -f tag is to specify the name of the dockerfile

docker build -t <image-name>:<image-version> -f <dockerfile-name> .


//list all images

docker images


//list some images


docker images | grep <some-string>


//access to the container terminal


docker exec -ti <container-name> bash


//access to the container terminal as a root user

docker exec -u root -ti <container-name> bash

//log the container


docker logs -f <container-name>


//copy files to a container

docker cp <file> <container-name>:<container-directory>

//copy file from the container to my host

docker cp <container-name>:<file-route> <host-route>


we can re write the cmd if we add a command after the image name 

docker run -d -m "500mb" --name mongo2 mongo echo "hola mundo"


docker inspect <container-name>

//list networks

docker network ls 

docker network inspect <red-name>

default network -> bridge

//create a docker network


docker network create <red-name>
//connect a container to another network

docker network connect <red-name> <container-name>

docker network connect red-test cont3

to disconnect the container we just have to replace connect with disconnect

docker network disconnect <red-name> <container-name>

to delete  a network we use

docker network rm <network-name>

we can create a container on the host network

